[[{"i":"edql-elasticsearch-gui-client-by-intellij-plugin","l":"EDQL: Elasticsearch GUI Client by Intellij Plugin","p":["EDQL is a profressional query and management tool for Elasticsearch based on Intellij platform. It has a simple graphical user interface for manage Elasticsearch cluster and query from Elasticsearch.","It is full compatible with official Query DSL, can just copy query DSL and run on EDQL without any extra effort. also EDQL has visual editor for quickly write query conditions with interactive UI.","It has powerful script engine: support function, variable and iteration etc. with smart Intellij you can easily write query DSL(refactor, extract etc).","EDQL is cross platform since it's based on intellij, so we can use it on windows, linux or macos.","The most important EDQL is full compatible with official Query DSL, It means we can copy query DSL from tutorial and run without any extra effort. also EDQL has visual editor for quickly write query dsl with interactive UI.","Elasticsearch Query DSL is complex, although we can use SQL or simple DSL directly query Elasticsearch, but in some time if we want to aggs data, further analysis or share Query DSL, it's hard to achieve.","It has powerful script engine: support function, variable and iteration etc. with intelligent Intellij you can easily write query DSL(autocomplete, refactor, live templates, extract etc).","For aggregations, EDQL support plotting aggregation results in Intellij directly for analysis data(find more: visualize.md)."]},{"l":"Feature Overview","p":["Manage Elasticsearch connections: add, delete and modify connection, view index, templates, tasks and nodes etc. also can modify index and create new index.","Query directly with official Query DSL without any other extra effort. so can quickly verify query conditions and examine data","View query result as table mode, JSON mode, search, highlight, fields selection etc. and modify, delete, new and export(scroll) documents on Data Viewer.","Works like a script with function, variable or iteration etc, so can quickly create your own query template or library for handling common use cases"]},{"l":"Getting Started"},{"l":"1. Connect to Elasticsearch","p":["Connect to Elasticsearch by using EDQL Dock Manager, it's default on the Intellij right side. In the EDQL Dock Manager, you can add a new connection to connect Elasticsearch and Test connectivity."]},{"l":"2. Start New Query Console","p":["After create and test a connection of Elasticsearch, you can create new query console on the Dock Toolbar with terminal icon:","or","Query index myindex with custom source fields"]},{"i":"guides-jump-right-in","l":"Guides: Jump right in","p":["Follow our handy guides to get started on the basics as quickly as possible:","install-edql-on-intellij.md","create-edql-script.md","run-edql-request.md"]},{"l":"Use cases with EDQL","p":["EDQL is not only target for query also can help solve multi scenarios problems, you could find use cases by:","query-data.md","analysis-data.md","manage-cluster.md"]},{"l":"Explore More about EDQL Syntax","p":["EDQL is a full features of script with compatible Elasticsearch Query DSL, and also support: function, variable, collection, type and iteration etc. explore more :","basic-syntax.md","script-syntax.md","glossary.md"]}],[{"i":"#","p":["Install EDQL Elasticsearch GUI Client on Intellij"]},{"l":"Install on Intellij","p":["EDQL plugin is based on Jetbrains IDE platform, and support version >= 203, it can be installed on Intellij, Webstorm, Go Land Jetbrains IDE. Also since Jetbrains IDE platform is cross platform, it can be installed on Windows, MacOS and Linux operating systems.","For different use cases, there are two ways to install EDQL on Intellij IDE Platform"]},{"l":"Install EDQL from IDE Plugin Marketplace","p":["Install from Intellij Plugins Marketplace is the simplest way to install EDQL, just open the Intellij plugins marketplace and search EDQL, download, install and restart IDE. also EDQL updates will notify by Intellij updates notification."]},{"l":"Download EDQL from website and Install","p":["In some cases, it's impossible to use Intellij Plugins Marketplace, you can go to EDQL Plugin website, choose the newest version and download plugin zip.","After downloaded, open IDE plugin dialog, and choose install plugin from disk with downloaded EDQL zip, also restart Intellij IDE"]}],[{"i":"#","p":["Connect Elasticsearch and Query by EDQL"]},{"l":"Connect and Query"},{"l":"Connection","p":["Connect to Elasticsearch by using EDQL Dock Manage default on the Intellij right side. In the EDQL Dock Manager, you can add new connection to connect Elasticsearch and Test connection.","View more on:","dock-manager.md"]},{"l":"Authorization"},{"l":"Authorization Token","p":["Use authorization token to connect Elasticsearch cluster, such as basic token, bearer token or custom token"]},{"i":"username--password","l":"Username & Password","p":["Basic username, password"]},{"l":"AWS","p":["Use aws region, api key id, api key secret to connect aws Elasticsearch"]},{"l":"General ApiKey","p":["User general api key to connect Elasticsearch cluster, such as Elastic cloud"]},{"l":"SSH Tunnel","p":["Use SSH tunnel encrypt a connection between a client and a server to connect Server, or make connections inside same VPC(Virtual Private Cloud), Example: connect aws server in same VPC."]},{"l":"Query Console","p":["After create and test a connection of Elasticsearch, you can create new query console on the Dock Toolbar with terminal icon"]},{"l":"Query by Visual Editor","p":["After EDQL file is created, we can use the Visual Editor to configure an query action, since the common query conditions are annoying and boring. Visual Editor is a powerful tool to visual query conditions and configurations, example: term match, range query, wildcard query and size, explan etc."]}],[{"i":"#","p":["Run EDQL query on Elasticsearch: execute EDQL query action and visualize data result"]},{"l":"Run EDQL Query and Data Viewer"},{"l":"Run with Intellij IDE","p":["EDQL is a script, it's easy to run and execute on Intellij IDE, the EDQL minimum run block is Query Action, also support run whole script. The following 3 ways to run EDQL script by Intellij."]},{"l":"Run Query Action","p":["We can run single action by click action left icon directly or when cursor stay on the request action block use the Run shortcut directly, also you can use click right mouse with run to run. it will only run current request action and return current request action response:"]},{"l":"Run Script","p":["when EDQL script has multiple actions, we can run all actions when cursor not on any request action block and use Run shortcut to run whole requests also you can use right mouse for run. For multiple request actions, multiple responses will return, and display with multiple tabs for every result:"]},{"l":"Run with Visual Editor","p":["when switch in Visual Editor, Also we can just use Run button on every action block to run:"]}],[{"i":"#","p":["EDQL Script File"]},{"l":"EDQL Script Usage","p":["EDQL script is used for creating a standlone script file, for connect Elasticseach and run query, it's context base, so we can use function variable to do some complex queries.","EDQL is based on Intellij, for different use cases there are two places to save new edql script:","store on EDQL dock manager","store on current project directory"]},{"l":"New EDQL by Dock Manager","p":["EDQL manager dashboard is used to manage the EDQL files, it will share cross projects, so we can use this place to store the EDQL files that will be used anywhere.","it will auto fill the HOST, Timeout and Authorization with a simple EDQL Action, the EDQL file will be stored in the Manager like the Scratches files."]},{"l":"New EDQL by New file","p":["it will automatically load the EDQL file template, include: HOST, Timeout , Authorization and with a simple EDQL Query Action. this file will be stored on the current directory"]},{"l":"Configurations"},{"l":"HOST","p":["HOST is target to Elasticsearch/Opensearch cluster master host endpoint or gateway"]},{"l":"KIBANA_HOST","p":["In some cases we can't directly connect to Elasticsearch Cluster host, only Kibana is exposed to use, in this case we can configure the KIBANA_HOST to proxy query from Elasticsearch"]},{"l":"Timeout","p":["Timeout is used to configure every action request timeout, like query, write and delete etc","Caution: this only limit the request timeout, not this action execute time."]},{"l":"Authorization","p":["If Elasticsearch/Opensearch cluster has configured Authorization, we need to configure the Authorization to connect Elasticsearch Cluster","basic authorization, elastic cloud authorization, AWS credentials"]},{"l":"Authorization header"},{"l":"Basic Username and Password"},{"l":"ApiKey Credential"},{"l":"AWS Credential","p":["aws has another configuration of aws region"]},{"l":"Query Action","p":["Elasticsearch query action include 4 parts:","Query Methods: GET, POST, DELETE and PUT","Query Index: the index name for query","Query Type: search, mapping","Query Body: the JSON body for query conditions"]},{"l":"Query DSL Body","p":["Query DSL body is same as the offcial Query DSL block: QueryDSL, it's a JSON format with the query configurations. since EDQL is based on Intellij, it supports autocomplete, format and live templates, example: qbm, range, wildcard etc."]}],[{"l":"Intellij Actions"},{"l":"Run","p":["EDQL script support run request action directly on Intellij by click right Run button or use the Run shortcut."]},{"l":"Run Query Action","p":["We can run single request by click the request right icon directly or when cursor stay on the request action block use the Run shortcut directly. it will only run current request action and return current request action response."]},{"l":"Run Script","p":["If EDQL script has multiple request actions, we can run whole request actions when cursor not stay on any request action block and use Run shortcut to run whole requests. For multiple request actions, multiple responses will return and display separated by tab"]},{"l":"Download"},{"l":"Download Query Result"},{"l":"Scroll Download by Query"},{"l":"Manage"},{"l":"Create Index"},{"l":"Delete Index"},{"l":"Export Data"},{"l":"Import Data"},{"l":"Create Template"},{"l":"Create Alias"},{"l":"Create Script"},{"l":"Create Pipeline"},{"l":"Reindex"},{"l":"Rebuild"},{"l":"Templates"},{"l":"Tasks"},{"l":"Ingests"},{"l":"Plugins"},{"l":"Plot","p":["visualize.md"]},{"l":"Convert Query to Java"}],[{"l":"Dock Manager","p":["EDQL has a Dock Manager default on right side of intellij, Dock Manager support manage Elasticsearch Connections and EDQL script files. It's easy for using to save global configurations and scripts."]},{"l":"Manage Connection"},{"l":"Add Connection"},{"l":"Test Connection"},{"l":"Cluster Info","p":["Indices","Aliases","Tasks","Snapshots"]},{"i":"manage--script","l":"Manage Script"}],[{"i":"#","p":["Intellij IDE support for EDQL DSL editor"]},{"l":"DSL Editor"},{"l":"File Template"},{"l":"Live Templates","p":["aggs","avg","bool","catHealth","catIndices","catNodes","clusterHealth","clusterStats","count","createIndex","Defined Live Templates:","EDQL plugin already defined the common used Live Templates for intelligence, easily and quickly to write the request action or query conditions, so when input the below keyword, the Live Template will automatically expand.","exists","explain","field","filter","from","getNodes","mapping","must","mustNot","notEmpty","profile","qbf","qbm","range","regexp","script","search","should","size","sort","source","tasks","term","terms","wildcard"]},{"l":"Highlight","p":["Highlight include two parts for edql, for now it supports:","highlight for reservered words","HOST","Authorization","local","…","highlight for key characters","brackets","number","comment","colon","TODO: In next step will try to support semantics hilightling"]},{"l":"Autocomplete","p":["Autocomplete include two ways autocomplete for edql:","Keywords autocomplete","Usally include the reservered words and keywords for edql, example: HOST, Authorization, POST, GET, DELETE, PUT, local etc","Live Templates autocomplete","Live Templates is defined for autocomplete the query dsl, example: qbm, qbf, size, terms, term, queryString, search etc","TODO: autocomplete auto integrate with the current dsl, such as remove extra bracket"]},{"l":"Refactor","p":["Refactor is an import way for coding, for now edql supports: rename variable, rename function name"]},{"l":"Format","p":["Format support to format Query DSL blocks, includes: function, variable, JSON block, array block etc. it’s a simple way to make code is clean"]}],[{"i":"#","p":["Visual Editor for Help Quickly Generate Elasticsearch Query DSL in EDQL"]},{"l":"Visual Editor","p":["Always complex Query DSL syntax is hard to learn and remember, also not easy to view if we only want to query by some simple conditions, example: must, must_not, term, terms, range etc.","So EDQL has implemented a powerful feature for visualize write query conditions by using interactive Visual Editor.","EDQL visual editor can help quickly generate Elasticsearch Query DSL with visual configurations, we just need to set the query type, filed name and field value. after these we can directly run this Query Action on Visual Editor, also if we switch back to script mode, the generated Query DSL also will be synced."]},{"l":"Switch in Visual Editor","p":["Create Visual Action","Configure Query","Delete Query Condition"]}],[{"i":"#","p":["Visualization is useful for analysis data and find data value"]},{"l":"Data Viewer"},{"l":"Table View"},{"l":"Single Response"},{"l":"Multi Responses"},{"l":"Source Data Modification"},{"l":"Modify Data"},{"l":"Add Row"},{"l":"Delete Row"},{"l":"Commit"},{"l":"JSON View"},{"l":"Aggregation Data Table"},{"l":"Aggregation Data JSON View"},{"l":"Aggregation Data Plot"},{"l":"Index Mapping View"},{"l":"Cluster Response View"},{"l":"Execute Details"},{"l":"Source Data Export"},{"l":"Diagram Export"},{"l":"Fields Filter"},{"l":"Table Search"},{"l":"Fit Pane"},{"l":"Profile"},{"l":"Explain"},{"l":"Details"},{"i":"commit-1","l":"Commit"}],[{"i":"#","p":["Search documents from Elasticsearch: filter, highlight, modify and export result set"]},{"l":"Query"},{"l":"Search Documents","p":["Elasticsearch is a powerful search engine and has complex and features query dsl syntax for search and analysis documents. but the query syntax it's complex and have a hard curve to learn. EDQL is try to improve learn curve with supporting primitive Elasticsearch query syntax and IDE support(highlight, autocomplete, document etc).","We can just copy the query demo from Elasticsearch document website, paste to EDQL script and run for quickly verify the result. Also we can try to test Elasticsearch new features by using EDQL script.","Since EDQL is a script file, we can create EDQL scripts for daily search and search shortcuts. and these scripts can be shared by projects and team, help other people for quickly search from Elasticsearch without extra effort.","With search result can be displayed compact data table, it's easy to filter document, highlight document and modify document.","Also EDQL has a powerful Visual Editor, it can help quickly to search document by configure queries without writing code, the Visual Editor has the Layout mode, we can just run queries to search document, for example: team share EDQL scripts for search document"]},{"l":"Export Documents","p":["In some cases we want to download Elasticsearch documents for analysis or sharing, EDQL support two modes download Elasticsearch documents, for now both modes only support download as CSV file"]},{"l":"Download Search Result-Set","p":["Download search result-set is for when run the EDQL query action, want to download current documents table, the download documents only limit the EDQL query action return current result size determined by query action: \"size\" parameter"]},{"l":"Download by Query","p":["Download by query is based on Visual Editor, it default will use scroll download the query action whole documents, when start downloading you can configure the scroll size. it will download whole documents that match the query action, it maybe take a long time to export determined by the query hits. EDQL also has support to cancel the long time downloading on progress bar with Cancel button"]},{"i":"edql-syntax-could-find-on","l":"EDQL syntax could find on:","p":["basic-syntax.md"]}],[{"l":"Aggregate"},{"l":"Aggregations","p":["Elasticsearch is good at analysising documents by using Aggreagation feature, for example: max, min, , mean or sum value etc. Aggregation has 3 aggregation categories, include: bucket, metrics and pipeline mode.","EDQL fully support Elasticsearch Aggregation syntax for quickly statistic documents. and since it's based on Intellij platform, have built a lot of Aggregation templates for quickly write aggregation term, for example: max, min etc.","also EDQL support function we can create the custom aggregation function as a aggregation shortcut for usage:"]},{"l":"Plot and Visualize","p":["In most time, we not only just want to statistic documents, also need to plot data, especially for time series, buckets or range aggregation result. EDQL support the plot syntax in Query Action, we can easily to plot Aggregation result with the custom chart parameters. also the chart is interactive, can be used to deeper analysis or mark.","This example aggregation by time with week and month interval, we configure visualization by plot configure, include two line: ff and tt with x axis and y axis, set the chart type as line. after run this Query Action, we can use the Run Result window to display these charts and interactive include: zoom, selective, filter or marker etc","See more on:","visualize.md"]}],[{"i":"#","p":["Manage Elasticsearch cluster: observerlity and management settings, index and tasks"]},{"l":"Management","p":["Elasticsearch Cluster has many metrics need to observe all the time, Example we often need to check whether cluster health, index stats or tasks background running.","EDQL has provided full features to manage Elasticsearch cluster by interactive action include: cluster, nodes, index, tasks etc. so we can simplily observe Elasticsearch metrics by EDQL without any extra effort."]},{"l":"Index Manage","p":["Manage Elasticsearch index with EDQL is very simple, all actions are interactive without any extra effort."]},{"l":"Indices","p":["List of all indices of Elasticsearch, this action will query indices and display index details as table, include:","name","documents","size"]},{"l":"Create Index","p":["EDQL has built an ui of create index table, we can configure new index by seting field name, field type and nest field type(properties or field), for nest field we can use \"a.b\" for nest field path. when executing the index creation, EDQL will automatically expand nest field path as nest document","Also EDQL support creating index by copying from another index, we can use copy from index action to import other index mapping","By default EDQL create index action use default index type _doc, if want specify other type, you need set the custom index type on index type field","After creating index successfu, the create index table will be closed and redirect to Indices table, if create failed, such as index name duplicate or name is illegal, the error popup dialog will show up"]},{"l":"Delete Index","p":["When using Indices table we can use delete action for deleting index with selected index"]},{"l":"Modify Index","p":["When using Indices table we can modify an existed index by using modify action, modify action will open a new table dialog with all indiex fields will be displayed, in the modify table dialog we can add new fields, since Elasticsearch cannot support modify exist fields"]},{"l":"Reindex","p":["EDQL support reindex index by using Reindex action, so if need to switch new index, we can use this action for quickly reindex data to new index.","Run Async config used to control Reindex aciton task whether run in background"]},{"l":"Import Index","p":["In some times, maybe need to index data into index, EDQL support import an csv data with header, it will use header as field name, index line by line as documents into Elasticsearch index"]},{"l":"Templates","p":["Templates action display Elasticsearch all templates in a table. for manage Templates, TODO"]},{"l":"Snapshots","p":["Snapshots action display Elasticsearch all snapshots in a table. for manage snapshots, TODO"]},{"l":"Cluster","p":["EDQL has cluster observer ablility for us to monitor cluster states."]},{"l":"Health","p":["Health action can view current cluster health state"]},{"l":"Stats","p":["Stats action show up current cluster stats"]},{"l":"State","p":["State action show up current cluster state"]},{"l":"Nodes","p":["Nodes action show up cluster all nodes with ip, heap, ram, cpu, load, role metrics etc","We can use this action quickly view current cluster node states"]},{"l":"Tasks","p":["Tasks action show up cluster current tasks with action, task_id, type, starttime, runningtime, ip and node metrics.","We can use this action quickly find current running tasks with their state"]}],[{"i":"#","p":["basic EDQL syntax for help quickly use EDQL"]},{"l":"Basic Syntax"},{"l":"Connection","p":["When firstly prepare to query from Elasticsearch, we need to configure how to connect the Elasticsearch cluster"]},{"l":"Host","p":["The api point to Elasticsearch Cluster, include: ip, port and http protocol, such as:"]},{"l":"Authorization","p":["If the Elasticsearch Cluster need authorization to connect, configure authorization there are 3 ways to achieve it."]},{"l":"Authorization Header","p":["If Elasticsearch Cluster support http basic Authorization header, we can configure Authorization header directly by:","The token should compute by base64 with username and password, see more: HTTP/REST clients and security and Elasticsearch Token Service tokens"]},{"l":"Basic Username and Password","p":["For if you don’t want use Authorization header, you can directly use the reserverd words Username and Password to configure the Authorization:","see more: Basic Authentication"]},{"l":"ApiKeyId and ApiKeySecret","p":["If you are using the Elastic Cloud, you can use the ApiKeyId and ApiKeySecret to connect Elastic Cloud by:","see more: ApiKeySecret"]},{"i":"aws-iam-apikeyid-apikeysecret-and-apisessiontoken","l":"AWS IAM: ApiKeyId, ApiKeySecret and ApiSessionToken","p":["If you are using the AWS Opensearch, you can use the AWSRegion to activate aws credential:"]},{"l":"Timeout","p":["Timeout is used to control the query actions timeout for Elasticsearch Cluster, it will apply to every action in current context. set Timeout by:","this will set timeout for action 1 second."]},{"l":"Query Actions","p":["Query Actions is same with Elasticsearch REST APIs, but in edql context defined it as Query Actions. so we can copy from Elascticsearch offical sample requests and execute these directly. such as:","query from my-index with bool query and filter.","why called it as REST Actions not REST APIS? since have enhanced the apis such as variables and functions etc, maybe call it as Action maybe better."]},{"i":"query-dsl-json-block","l":"Query DSL: JSON Block","p":["Query DSL JSON Block is same as Elasticsearch query DSL definition, we can write these query contexts in current block. such as bool query, aggregation etc. Example:"]}],[{"i":"#","p":["with script syntax, support abstract and create common functions"]},{"l":"Script Syntax"},{"l":"Variable","p":["In edql we can define variable to control the context logics, if we need to query multi indexes with same query conditions, we can use variable as a Query DSL Block for these multiple actions, example:","we define p variable for title keywords and extract it as array by jq, in for loop we iterate all keywords"]},{"l":"Function","p":["Function is used to abstract the common logics and for building custom library for your own projects. such as data dictionary, common query logics for quickly query data and locate data issues."]},{"l":"System Function","p":["System Function is edql already defined functions for supporting file IO etc. example:","readJSON","read json file from file path","writeJSON","write variable to file path","jq","used to extract json value as json type variable","TODO readExcel","TODO writeExcel"]},{"l":"Define Function","p":["Define Function this is for user abstract common query logics, example:","quickly aggregation current my index title keywords"]},{"l":"Import","p":["import keyword is used to import other edql script as a library, we use this feature to design or create default functions. for import, there are two path could be used"]},{"l":"From Local File","p":["EDQL will find import script by absolute path to load import file."]},{"l":"From Github","p":["EDQL will load import script from github when use a HTTP url in import"]},{"l":"Iteration","p":["EDQL support iterate collection by for loop, so in some times we want query results from a collection, it's easy to achieve this"]},{"l":"Comment","p":["comment in edql script by #"]}],[{"i":"#","p":["a list of glossaryies for EDQL"]},{"l":"Glossary","p":["ApiKeyId","ApiKeySecret","Authorization","AWSRegion","comment","Connection","DELETE","for","function","GET","Host","import","Password","POST","PUT","Timeout","Username","var"]}],[{"l":"Keyboard Shortcuts","p":["EDQL supports common shortcuts on Intellij IDE, include:","Format EDQL file, Intellij IDE format shortcut: ⌥⇧⌘L or Ctrl+Alt+Shift+L","Rename variable, functions: Intellij IDE rename shortcut: Shift+F6","Go Declaration: Intellij IDE declaration shortcut: Ctrl+B","..."]}],[{"i":"chat-query-elasticsearch-and-run-chat-query-based-on-chatgpt-35-turbo-model","l":"Chat Query Elasticsearch and Run Chat Query Based on ChatGPT 3.5 Turbo Model","p":["Are you tired of memorizing complex Elasticsearch query DSL syntax? Do you wish there was an easier way to query Elasticsearch? Look no further than the Elasticsearch Query Plugin EDQL, which now features a new Chat Query Elasticsearch capability powered by ChatGPT 3.5 Turbo.","With the Chat Query Elasticsearch feature, users can now query Elasticsearch using natural language in a chat format. This means that users can simply ask ChatGPT a question about the data they want to retrieve, and the plugin will generate the appropriate Elasticsearch query DSL. The Chat Query Elasticsearch feature is especially helpful for users who are new to Elasticsearch or who don't want to spend time memorizing complex query syntax.","The Chat Query Elasticsearch feature uses the ChatGPT 3.5 Turbo model to understand user queries and generate the appropriate Elasticsearch query DSL. This means that the plugin is smart and can generate complex queries based on the context of the conversation. Additionally, the chat query feature supports context, which means that users can start by querying an index, such as \"query index my-index,\" and then add more details to the query using natural language, such as \"field=222.\" The plugin will generate the complete query DSL based on the chat context.","EDQL is an IntelliJ plugin that can be easily installed and integrated with your development environment. With the new Chat Query Elasticsearch feature, users can easily retrieve data from Elasticsearch without the hassle of remembering query syntax. This can save developers time and effort, allowing them to focus on more important tasks.","The EDQL plugin also supports querying document data, as well as cluster stats and node stats. Users can simply type their query commands into the chat interface and receive the corresponding data as a result. For users who prefer SQL over Elasticsearch query DSL, the plugin can also help convert SQL queries to Elasticsearch query DSL.","The EDQL plugin is still in development, and feedback is welcome on the project's GitHub page at https://github.com/chengpohi/edql. In conclusion, the Elasticsearch Query Plugin EDQL's new Chat Query Elasticsearch feature powered by ChatGPT 3.5 Turbo is a game-changer for Elasticsearch querying. It offers a simple and intuitive way to retrieve data from Elasticsearch, without the need to memorize complex query syntax. Give it a try today and see how it can improve your Elasticsearch querying experience."]}],[{"i":"intellij-smart-completion-by-openai-nlp-completionchatgpt-text-davinci-003-code-davinci-002","l":"Intellij Smart Completion by OpenAI NLP Completion(ChatGPT: text-davinci-003, code-davinci-002)"},{"l":"Background","p":["Intellij is a very powerful development tool that is widely used for software development. As ChatGPT models trained by OpenAI become smarter and smarter, we have developed an Intellij plugin called EDQL. This plugin translates ChatGPT's ability to write code intelligently into code","Install and Try: https://github.com/chengpohi/edql/releases/tag/v1.9.16"]},{"i":"edqls-capabilities-natural-language-to-code-conversion","l":"EDQL's capabilities: natural language to code conversion","p":["EDQL is a plugin for Intellij platform, which integrates Intellij and ChatGPT's capabilities, and brings ChatGPT's intelligent complementary capabilities to Intellij, helping developers to realize the ability to generate executable code based on transforming natural language in annotations, in order to also try to introduce more capabilities, such as contextual analysis, test generation, code interpretation and more.","Also, EDQL supports users to configure their own OpenAI api key, stop words, prompt, etc., and use prompt to achieve more accurate code generation or completion. Usage:","When the cursor is in the comment, use the shortcut ALT + BACK_SLASH to request code generation, then after getting the completion, the editor will show the suggested completion","if it meets the current completion, use the TAB key to apply the code to insert the code block","if not use ESC to cancel the completion, then modify the comment to continue to request the completion.","The default complement model for the current language configuration is GPT3 (text-davinci-003)."]},{"i":"privacy-safe-and-secure-code-generation","l":"Privacy: safe and secure code generation","p":["EDQL plugin has a built-in default OpenAI key, which can only be implemented using the code-davinci-002 model, because at this stage the model is free, while for the smarter chatgpt model: text-davinci-003 requires users to fill in their own api key manually. For sending requests: Currently Only the content of the caret where the editor cursor is located will be sent to openai, of course for privacy, it is strongly recommended to use your own openai key."]},{"i":"future-plans-smarter-and-better-features","l":"Future plans: smarter and better features","p":["We plan to keep improving the EDQL plugin in the future to make it smarter and better. We will add new features such as smarter context and completion, and test code generation. We will continue to work hard to meet the needs of our users for better, more useful and convenient code generation tools. We hope that EDQL will become a great tool for developers, helping them to be more productive and save more time, so that they can focus more on the logic and implementation of the code. The future EDQL will definitely be smarter and better, and become an indispensable tool for developers.","Translated with www.DeepL.com/Translator(free version)"]}],[{"i":"smart-query-elasticsearch-with-openai-natural-language-completionchatgpt-models","l":"Smart Query Elasticsearch with Openai Natural Language Completion(ChatGPT models)"},{"l":"Background","p":["Users often use Elasticsearch Query DSL to help them query data quickly. But when querying with complex DSL syntax, there are still some problems, such as syntax errors or inaccuracies, leading to countless bugs in the code, and it is a real headache to find the bugs that have appeared in thousands of codes.","To solve this problem, we innovatively adopt the hottest ChatGPT model now provided by OpenAI in the EDQL plugin, by combining ChatGPT with Elasticsearch DSL, to help people use natural language in Intellij IDE to query data easily and improve search efficiency. (In the test GPT3 model is able to convert natural language into most accurate queries)","Install and Try it: https://github.com/chengpohi/edql/releases/tag/v1.9.16"]},{"l":"What is EDQL","p":["EDQL is a professional query and management tool for Elasticsearch based on the Intellij platform. It is used to manage Elasticsearch clusters and query data from Elasticsearch with the following features.","EDQL is fully compatible with the official Query DSL, and you can directly copy the Query DSL and run it on EDQL without any extra effort.","EDQL has a visual editor that allows you to quickly write query conditions through an interactive UI.","With a powerful scripting engine: support for functions, variables, iterations, etc. Using Smart Intellij, you can easily write query DSL (refactoring, extraction, etc.)."]},{"l":"What is the ChatGPT model","p":["OpenAI's ChatGPT model is a pre-trained natural language processing model that generates natural language text. It is a large deep learning model that has been widely used for a variety of natural language processing tasks.","What ChatGPT features are accessed in the EDQL plugin","Support custom OpenAI ChatGPT api key Open EDQL plugin, you can set a custom api key, and then you can experience its powerful functions at will.","Support stop words, prompt prefixes and suffixes Code-DaVinci-002, which we have access to in EDQL, is a chatbot model based on OpenAI's GPT-3 technology. The Code-DaVinci-002 model has been rigorously trained and tested to provide accurate, timely, and professional knowledgeable answers and advice. In addition, the Code-DaVinci-002 model also supports custom dictionaries, stop words, hint prefixes and hint suffixes to improve query efficiency and accuracy.","Intelligent recommendation of search terms ChatGPT can also intelligently recommend relevant search terms based on search history and other related information for faster and more convenient query data."]},{"i":"what-are-the-benefits-of-using-chatgpt-in-edql-plugin","l":"What are the benefits of using ChatGPT in EDQL plugin?","p":["No need to remember complicated syntax or struggle to understand the characteristics of the language. Have you ever encountered a situation where you are writing code and can't think of a certain syntax, making it impossible to continue writing? With ChatGPT, you only need a few words to tell it what you need, and it will write the code for you without having to memorize the syntax that is always being updated.","ChatGPT can improve your work efficiency by answering your questions quickly and accurately, reducing the time spent on researching and finding information. In addition, using ChatGPT technology allows you to quickly generate code, save time on handwritten code, and check and modify code to ensure correctness and quality. chatGPT can also assist programmers in performing documentation and project management tasks, further improving productivity.","Reduce or avoid code bugs. ChatGPT can help you find bugs quickly and provide the right code solution to reduce code errors."]}],[{"i":"#","p":["long term wildcard query can cause cluster crash"]},{"l":"Wildcard Query cause Cluster Crash"}]]