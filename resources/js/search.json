[[{"i":"what-is-edql","l":"What is EDQL?","p":["Elasticsearch Query - EDQL is a very useful GUI client for query and manage Elasticsearch or AWS Opensearch cluster. Just run Elasticsearch Query - EDQL with the one-click install on IntelliJ. Since it is script language, you can not only build your own query templates with function, variable, libraries, but also can do many types of simple or complex Elasticsearch queries with it. and EDQL is full compatible with official DSL API for all Elasticsearch versions, so it's easy for quick start."]},{"l":"Core Features","p":["Easy to Use: query by official DSL syntax","Visual query editor: visual query conditions and contexts","Manage query documents: add, delete, update and search document","Export query documents: download current query results or scroll download by query DSL","Query visualization: query documents as table, plot aggregations(line, bar, pie chart)","Multi authorizations support: Auth header, Basic Auth, Api Key and AWS Opensearch ApiKey","Support Elasticseaerch and AWS Opensearch connection","Manage Elasticsearch and Opensearch cluster: create index, add index and import data etc","Intellij IDE language operations support: go to declaration, find usages, extract, autocomplete, highlight, live templates, folding/unfolding","Intellij IDE run support: run single request or run multiple requests","Program easily: Transfer/convert Query DSL to Java request cod","Script syntax: variable, function, iteration, collection, type"]},{"l":"Getting Started","p":["Quickly Review an Query Example:","Query from localhost cluster with port 9200","Query index myindex with custom source fields"]},{"i":"guides-jump-right-in","l":"Guides: Jump right in","p":["Follow our handy guides to get started on the basics as quickly as possible:","install-edql-on-intellij.md","create-edql-script.md","run-edql-request.md"]},{"l":"Explore More about EDQL Syntax","p":["EDQL is a full features of script with compatible Elasticsearch Query DSL, and also support: function, variable, collection, type and iteration etc. explore more :","glossary.md","basic-syntax.md","script-syntax.md"]},{"l":"Use cases with EDQL","p":["EDQL is not only target for query also can help solve multi scenarios problems, you could find use cases by:","query-data.md","analysis-data.md","manage-cluster.md"]}],[{"l":"Install EDQL on Intellij"},{"l":"The Basics","p":["EDQL plugin is based on Jetbrains IDE platform, and support version >= 203, so we can install it on Intellij, Webstorm, Go Land IDE etc. it's very easy to do this. after install Intellij IDE can auto recognize the edql script file for supporting: Run, Highlight, Autocomplete, Format, Fold & Unfoldâ€¦"]},{"l":"Install","p":["For different users, there are 2 ways to install EDQL on Intellij IDE Platform"]},{"l":"Install by Marketspace","p":["Open the Intellij plugins and search EDQL, Download install and restart IDE"]},{"l":"Manual install","p":["Open EDQL Plugin website, select the newest version and download plugin zip","Open IDE plugin dialog, and select install plugin from disk with downloaded zip"]}],[{"l":"Write an EDQL Script","p":["Since EDQL is based on Intellij, for different use cases there are two places to store new edql file","store on current project directory","store on EDQL manager dashboard"]},{"l":"New EDQL file by New File","p":["New EDQL file by New file, it will automatically load the EDQL file template, include: HOST, Timeout , Authorization and with a simple EDQL Query Action. this file will be stored on the current directory"]},{"l":"New EDQL by the Manager Dashboard","p":["EDQL manager dashboard is used to manage the EDQL files, it will share cross projects, so we can use this place to store the EDQL files that will be used anywhere.","it will auto fill the HOST, Timeout and Authorization with a simple EDQL Action, the EDQL file will be stored in the Manager like the Scratches files."]},{"l":"Write by Visual Editor","p":["After EDQL file is created, we can use the Visual Editor to configure an query action, since the common query conditions are annoying and boring. Visual Editor is a powerful tool to visual query conditions and configurations, example: term match, range query, wildcard query and size, explan etc."]},{"l":"Basic Configuration"},{"l":"HOST","p":["HOST is target to Elasticsearch/Opensearch cluster master host endpoint or gateway"]},{"l":"KIBANA_HOST","p":["In some cases we can't directly connect to Elasticsearch Cluster host, only Kibana is exposed to use, in this case we can configure the KIBANA_HOST to proxy query from Elasticsearch"]},{"l":"Timeout","p":["Timeout is used to configure every action request timeout, like query, write and delete etc","Caution: this only limit the request timeout, not this action execute time."]},{"l":"Authorization","p":["If Elasticsearch/Opensearch cluster has configured Authorization, we need to configure the Authorization to connect Elasticsearch Cluster","basic authorization, elastic cloud authorization, AWS credentials"]},{"l":"Authorization header"},{"l":"Basic Username and Password"},{"l":"ApiKey Credential"},{"l":"AWS Credential","p":["aws has another configuration of aws region"]},{"l":"Query Action","p":["Elasticsearch query action include 4 parts:","Query Methods: GET, POST, DELETE and PUT","Query Index: the index name for query","Query Type: search, mapping","Query Body: the JSON body for query conditions"]},{"l":"Query DSL Body","p":["Query DSL body is same as the offcial Query DSL block: QueryDSL, it's a JSON format with the query configurations. since EDQL is based on Intellij, it supports autocomplete, format and live templates, example: qbm, range, wildcard etc."]}],[{"l":"Run EDQL Request"},{"l":"Run with IDE Runner"},{"l":"Run Single Request","p":["We can run single request by click the request right icon directly or when cursor stay on the request action block use the Run shortcut directly. it will only run current request action and return current request action response:"]},{"l":"Run Multiple Requests","p":["If EDQL script has multiple request actions, we can run all request actions when cursor not stay on any request action block and use Run shortcut to run whole requests. For multiple request actions, multiple responses will return:"]},{"l":"Run with Visual Editor","p":["Also if we want run query by the script, we also can use the visual dash board to run query action:"]}],[{"l":"Glossary","p":["Good to know: Splitting your product into fundamental concepts, objects, or areas can be a great way to let readers deep dive into the concepts that matter most to them."]}],[{"l":"Basic Syntax","p":["Good to know: Splitting your product into fundamental concepts, objects, or areas can be a great way to let readers deep dive into the concepts that matter most to them."]}],[{"l":"Script Syntax","p":["Good to know: Splitting your product into fundamental concepts, objects, or areas can be a great way to let readers deep dive into the concepts that matter most to them."]}],[{"l":"Language Support","p":["Good to know: Splitting your product into fundamental concepts, objects, or areas can be a great way to let readers deep dive into the concepts that matter most to them."]}],[{"l":"Actions"}],[{"l":"Visual Editor"}],[{"l":"Visualize","p":["Good to know: Splitting your product into fundamental concepts, objects, or areas can be a great way to let readers deep dive into the concepts that matter most to them."]}],[{"l":"Query Data","p":["Good to know: depending on the product you're building, it can be useful to explicitly document use cases. Got a product that can be used by a bunch of people in different ways? Maybe consider splitting it out!"]}],[{"l":"Analysis Data","p":["Good to know: depending on the product you're building, it can be useful to explicitly document use cases. Got a product that can be used by a bunch of people in different ways? Maybe consider splitting it out!"]}],[{"l":"Manage Cluster","p":["Good to know: depending on the product you're building, it can be useful to explicitly document use cases. Got a product that can be used by a bunch of people in different ways? Maybe consider splitting it out!"]}],[{"l":"Keyboard Shortcuts","p":["Good to know: depending on the product you're building, it can be useful to explicitly document use cases. Got a product that can be used by a bunch of people in different ways? Maybe consider splitting it out!"]}]]