[[{"i":"what-is-edql","l":"What is EDQL?","p":["Elasticsearch Query - EDQL is a very useful GUI client for query and manage Elasticsearch or AWS Opensearch cluster. Just run Elasticsearch Query - EDQL with the one-click install on IntelliJ. Since it is script language, you can not only build your own query templates with function, variable, libraries, but also can do many types of simple or complex Elasticsearch queries with it. and EDQL is full compatible with official DSL API for all Elasticsearch versions, so it's easy for quick start."]},{"l":"Core Features","p":["Easy to Use: query by official DSL syntax","Visual query editor: visual query conditions and contexts","Manage query documents: add, delete, update and search document","Export query documents: download current query results or scroll download by query DSL","Query visualization: query documents as table, plot aggregations(line, bar, pie chart)","Multi authorizations support: Auth header, Basic Auth, Api Key and AWS Opensearch ApiKey","Support Elasticseaerch and AWS Opensearch connection","Manage Elasticsearch and Opensearch cluster: create index, add index and import data etc","Intellij IDE language operations support: go to declaration, find usages, extract, autocomplete, highlight, live templates, folding/unfolding","Intellij IDE run support: run single request or run multiple requests","Program easily: Transfer/convert Query DSL to Java request cod","Script syntax: variable, function, iteration, collection, type"]},{"l":"Getting Started","p":["Quickly Review an Query Example:","Query from localhost cluster with port 9200","Query index myindex with custom source fields"]},{"i":"guides-jump-right-in","l":"Guides: Jump right in","p":["Follow our handy guides to get started on the basics as quickly as possible:","install-edql-on-intellij.md","create-edql-script.md","run-edql-request.md"]},{"l":"Explore More about EDQL Syntax","p":["EDQL is a full features of script with compatible Elasticsearch Query DSL, and also support: function, variable, collection, type and iteration etc. explore more :","glossary.md","basic-syntax.md","script-syntax.md"]},{"l":"Use cases with EDQL","p":["EDQL is not only target for query also can help solve multi scenarios problems, you could find use cases by:","query-data.md","analysis-data.md","manage-cluster.md"]}],[{"i":"#","p":["Firstly install EDQL on Intellij and start"]},{"l":"Install EDQL on Intellij"},{"l":"The Basics","p":["EDQL plugin is based on Jetbrains IDE platform, and support version >= 203, so we can install it on Intellij, Webstorm, Go Land IDE etc. it's very easy to do this. after install Intellij IDE can auto recognize the edql script file for supporting: Run, Highlight, Autocomplete, Format, Fold & Unfoldâ€¦"]},{"l":"Install","p":["For different users, there are 2 ways to install EDQL on Intellij IDE Platform"]},{"l":"Install by Marketspace","p":["Open the Intellij plugins and search EDQL, Download install and restart IDE"]},{"l":"Manual install","p":["Open EDQL Plugin website, select the newest version and download plugin zip","Open IDE plugin dialog, and select install plugin from disk with downloaded zip"]}],[{"i":"#","p":["Write an EDQL script, connect to Elasticsearch cluster and configurations"]},{"l":"Write EDQL Script","p":["Since EDQL is based on Intellij, for different use cases there are two places to store new edql file","store on current project directory","store on EDQL manager dashboard"]},{"l":"New EDQL file by New File","p":["New EDQL file by New file, it will automatically load the EDQL file template, include: HOST, Timeout , Authorization and with a simple EDQL Query Action. this file will be stored on the current directory"]},{"l":"New EDQL by the Manager Dashboard","p":["EDQL manager dashboard is used to manage the EDQL files, it will share cross projects, so we can use this place to store the EDQL files that will be used anywhere.","it will auto fill the HOST, Timeout and Authorization with a simple EDQL Action, the EDQL file will be stored in the Manager like the Scratches files."]},{"l":"Write by Visual Editor","p":["After EDQL file is created, we can use the Visual Editor to configure an query action, since the common query conditions are annoying and boring. Visual Editor is a powerful tool to visual query conditions and configurations, example: term match, range query, wildcard query and size, explan etc."]},{"l":"Basic Configuration"},{"l":"HOST","p":["HOST is target to Elasticsearch/Opensearch cluster master host endpoint or gateway"]},{"l":"KIBANA_HOST","p":["In some cases we can't directly connect to Elasticsearch Cluster host, only Kibana is exposed to use, in this case we can configure the KIBANA_HOST to proxy query from Elasticsearch"]},{"l":"Timeout","p":["Timeout is used to configure every action request timeout, like query, write and delete etc","Caution: this only limit the request timeout, not this action execute time."]},{"l":"Authorization","p":["If Elasticsearch/Opensearch cluster has configured Authorization, we need to configure the Authorization to connect Elasticsearch Cluster","basic authorization, elastic cloud authorization, AWS credentials"]},{"l":"Authorization header"},{"l":"Basic Username and Password"},{"l":"ApiKey Credential"},{"l":"AWS Credential","p":["aws has another configuration of aws region"]},{"l":"Query Action","p":["Elasticsearch query action include 4 parts:","Query Methods: GET, POST, DELETE and PUT","Query Index: the index name for query","Query Type: search, mapping","Query Body: the JSON body for query conditions"]},{"l":"Query DSL Body","p":["Query DSL body is same as the offcial Query DSL block: QueryDSL, it's a JSON format with the query configurations. since EDQL is based on Intellij, it supports autocomplete, format and live templates, example: qbm, range, wildcard etc."]}],[{"i":"#","p":["Run EDQL query on Elasticsearch: execute EDQL query action and visualize result-set"]},{"l":"Run EDQL Query"},{"l":"Run with Intellij IDE","p":["EDQL is a script, it's easy to run and execute on Intellij IDE, the EDQL minimum run block is Query Action, also support run whole script. The following 3 ways to run EDQL script by Intellij."]},{"l":"Run Single Action","p":["We can run single action by click action left icon directly or when cursor stay on the request action block use the Run shortcut directly, also you can use click right mouse with run to run. it will only run current request action and return current request action response:"]},{"l":"Run Whole Script","p":["when EDQL script has multiple actions, we can run all actions when cursor not on any request action block and use Run shortcut to run whole requests also you can use right mouse for run. For multiple request actions, multiple responses will return, and display with multiple tabs for every result:"]},{"l":"Run with Visual Editor","p":["when switch in Visual Editor, Also we can just use Run button on every action block to run:"]}],[{"i":"#","p":["Search documents from Elasticsearch: filter, highlight, modify and export result set"]},{"l":"Query"},{"l":"Search Documents","p":["Elasticsearch is a powerful search engine and has complex and features query syntax for search and analysis data. but the query syntax it's complex and have a hard curve to learn. EDQL is try to improve learn curve with supporting primitive Elasticsearch query syntax and IDE support(highlight, autocomplete, document etc).","We can just copy the query demo from Elasticsearch document website, paste to EDQL script and run for quickly verify the result. Also we can try to test Elasticsearch new features by using EDQL script.","Since EDQL is a script file, we can create EDQL scripts for daily search and search shortcuts. and these scripts can be shared by projects and team, help other people for quickly search from Elasticsearch without extra effort.","With search result can be displayed compact data table, it's easy to filter data, highlight data and modify data.","Also EDQL has a powerful Visual Editor, it can help quickly to search data by configure queries without writing code, the Visual Editor has the Layout mode, we can just run queries to search data, for example: team share EDQL scripts for search data"]},{"l":"Export Documents","p":["In some cases we want to export Elasticsearch documents for analysis or sharing, EDQL support two modes export Elasticsearch data, for now both modes only support download as CSV file"]},{"l":"Export Search Result-Set","p":["Export search result-set is for when run the EDQL query action, want to export current data table, the export data only limit the EDQL query action return current result size determined by query action: \"size\" parameter"]},{"l":"Export by Query","p":["Export by query is based on Visual Editor, it default will use scroll download the query action whole data, when start downloading you can configure the scroll size. it will download whole data that match the query action, it maybe take a long time to export determined by the query hits. EDQL also has support to cancel the long time exporting on progress bar"]}],[{"i":"#","p":["Analysis Elasticsearch data: aggregation and plot"]},{"l":"Analysis"},{"l":"Aggregation"},{"l":"Plot"}],[{"l":"Manage Cluster"},{"l":"Cluster Info"},{"l":"Index Manage"},{"l":"Snapshot Manage"},{"l":"Task Manage"},{"l":"Data Import"}],[{"l":"Basic Syntax"},{"l":"Connection","p":["When firstly prepare to query from Elasticsearch, we need to configure how to connect the Elasticsearch cluster"]},{"l":"Host","p":["The api point to Elasticsearch Cluster, include: ip, port and http protocol, such as:"]},{"l":"Authorization","p":["If the Elasticsearch Cluster need authorization to connect, configure authorization there are 3 ways to achieve it."]},{"l":"Authorization Header","p":["If Elasticsearch Cluster support http basic Authorization header, we can configure Authorization header directly by:","The token should compute by base64 with username and password, see more: HTTP/REST clients and security and Elasticsearch Token Service tokens"]},{"l":"Basic Username and Password","p":["For if you donâ€™t want use Authorization header, you can directly use the reserverd words Username and Password to configure the Authorization:","see more: Basic Authentication"]},{"l":"ApiKeyId and ApiKeySecret","p":["If you are using the Elastic Cloud, you can use the ApiKeyId and ApiKeySecret to connect Elastic Cloud by:","see more: ApiKeySecret"]},{"i":"aws-iam-apikeyid-apikeysecret-and-apisessiontoken","l":"AWS IAM: ApiKeyId, ApiKeySecret and ApiSessionToken","p":["If you are using the AWS Opensearch, you can use the AWSRegion to activate aws credential:"]},{"l":"Timeout","p":["Timeout is used to control the query actions timeout for Elasticsearch Cluster, it will apply to every action in current context. set Timeout by:","this will set timeout for action 1 second."]},{"l":"Query Actions","p":["Query Actions is same with Elasticsearch REST APIs, but in edql context defined it as Query Actions. so we can copy from Elascticsearch offical sample requests and execute these directly. such as:","query from my-index with bool query and filter.","why called it as REST Actions not REST APIS? since have enhanced the apis such as variables and functions etc, maybe call it as Action maybe better."]},{"i":"query-dsl-json-block","l":"Query DSL: JSON Block","p":["Query DSL JSON Block is same as Elasticsearch query DSL definition, we can write these query contexts in current block. such as bool query, aggregation etc. Example:"]}],[{"l":"Script Syntax"},{"l":"Variable","p":["In edql we can define variable to control the context logics, if we need to query multi indexes with same query conditions, we can use variable as a Query DSL Block for these multiple actions, example:","we define p variable for title keywords and extract it as array by jq, in for loop we iterate all keywords"]},{"l":"Function","p":["Function is used to abstract the common logics and for building custom library for your own projects. such as data dictionary, common query logics for quickly query data and locate data issues."]},{"l":"System Function","p":["System Function is edql already defined functions for supporting file IO etc. example:","readJSON","read json file from file path","writeJSON","write variable to file path","jq","used to extract json value as json type variable","TODO readExcel","TODO writeExcel"]},{"l":"Define Function","p":["Define Function this is for user abstract common query logics, example:","quickly aggregation current my index title keywords"]},{"l":"Import"},{"l":"For Loop"},{"l":"Comment"},{"l":"Terms"}],[{"l":"Glossary","p":["ApiKeyId","ApiKeySecret","Authorization","AWSRegion","comment","Connection","DELETE","for","function","GET","Host","import","Password","POST","PUT","Timeout","Username","var"]}],[{"l":"Visualize"},{"l":"Source Data Table"},{"l":"Single Response"},{"l":"Multi Responses"},{"l":"Source Data Modification"},{"l":"Modify Data"},{"l":"Add Row"},{"l":"Delete Row"},{"l":"Commit"},{"l":"Source Data JSON View"},{"l":"Aggregation Data Table"},{"l":"Aggregation Data JSON View"},{"l":"Aggregation Data Plot"},{"l":"Index Mapping View"},{"l":"Cluster Response View"},{"l":"Execute Details"},{"l":"Source Data Export"},{"l":"Diagram Export"},{"l":"Fields Filter"},{"l":"Table Search"},{"l":"Fit Pane"},{"l":"Profile"},{"l":"Explain"},{"l":"Details"},{"i":"commit-1","l":"Commit"}],[{"l":"Language Support"},{"l":"1. Run","p":["EDQL script support run request action directly on Intellij by click right Run icon or use the Run shortcut."]},{"i":"11-run-single-request","l":"1.1 Run Single Request","p":["We can run single request by click the request right icon directly or when cursor stay on the request action block use the Run shortcut directly. it will only run current request action and return current request action response."]},{"i":"12-run-multiple-requests","l":"1.2 Run Multiple Requests","p":["If EDQL script has multiple request actions, we can run all request actions when cursor not stay on any request action block and use Run shortcut to run whole requests. For multiple request actions, multiple responses will return."]},{"i":"13-live-templates","l":"1.3 Live Templates","p":["aggs","avg","bool","catHealth","catIndices","catNodes","clusterHealth","clusterStats","count","createIndex","Defined Live Templates:","EDQL plugin already defined the common used Live Templates for intelligence, easily and quickly to write the request action or query conditions, so when input the below keyword, the Live Template will automatically expand.","exists","explain","field","filter","from","getNodes","mapping","must","mustNot","notEmpty","profile","qbf","qbm","range","regexp","script","search","should","size","sort","source","tasks","term","terms","wildcard"]},{"l":"3. Highlight","p":["Highlight include two parts for edql, for now it supports:","highlight for reservered words","HOST","Authorization","local","â€¦","highlight for key characters","brackets","number","comment","colon","TODO: In next step will try to support semantics hilightling"]},{"l":"4. Autocomplete","p":["Autocomplete include two ways autocomplete for edql:","Keywords autocomplete","Usally include the reservered words and keywords for edql, example: HOST, Authorization, POST, GET, DELETE, PUT, local etc","Live Templates autocomplete","Live Templates is defined for autocomplete the query dsl, example: qbm, qbf, size, terms, term, queryString, search etc","TODO: autocomplete auto integrate with the current dsl, such as remove extra bracket"]},{"l":"5. Refactor","p":["Refactor is an import way for coding, for now edql supports: rename variable, rename function name"]},{"l":"6. Format","p":["Format support to format Query DSL blocks, includes: function, variable, JSON block, array block etc. itâ€™s a simple way to make code is clean"]}],[{"l":"Actions"}],[{"l":"Visual Editor"}],[{"l":"Keyboard Shortcuts","p":["EDQL supports common shortcuts on Intellij IDE, include:","Format EDQL file, Intellij IDE format shortcut: âŒ¥â‡§âŒ˜L or Ctrl+Alt+Shift+L","Rename variable, functions: Intellij IDE rename shortcut: Shift+F6","Go Declaration: Intellij IDE declaration shortcut: Ctrl+B","..."]}],[{"l":"Wildcard Query cause Cluster Crash"}]]